# Extracted from 

{% set cctools_version = '895' %}
{% set cctools_sha256 = 'ce66034fa35117f9ae76bbb7dd72d8068c405778fa42e877e8a13237a10c5cb7' %}
{% set ld64_version = '274.2' %}
{% set ld64_sha256 = '175d89c419e99d49a7a5f7e4196d3cef4c9e19cc17a425c332e86df6b516f7d7' %}
{% set dyld_version = '433.5' %}
{% set dyld_sha256 = '13e370ed12c137f0153a96bab12e1d46896db07f8a40bac6b0529585ceac9260' %}

package:
  name: cctools-and-ld64
  version: {{ ld64_version }}

source:
  - url: https://opensource.apple.com/tarballs/cctools/cctools-{{ cctools_version }}.tar.gz
    sha256: {{ cctools_sha256 }}
    folder: cctools
    patches:
      - 001-cctools-remove_static_part.patch
      - 100-cctools-add_sdkroot_headers.patch
      - 110-cctools-import_to_include.patch
      - 120-cctools-fix_time_bugs.patch
      - 130-cctools-add_compileguards.patch
      - 140-cctools-remove_sysctl_osversion_detection.patch
      - 160-cctools-map_64bit_arches.patch
      - 170-cctools-fix_printf_format_bugs.patch
      - 180-cctools-add_CROSS_SYSROOT.patch
      - 190-cctools-default_arch.patch
      - 210-cctools-dont_typedef_NxConstantString.patch
      - 220-cctools-cross-prefixes-EXEEXT-and-progname_fixes.patch
      - 240-cctools-use_strerror.patch
      - 250-cctools-dont_assume_getattrlist.patch
      - 260-cctools-ppc64_reenable.patch
      - 270-cctools-dont_assume_vm_sync.patch
      - 280-cctools-missing_includes.patch
      - 290-cctools-error_as_weak_symbol.patch
      - 300-cctools-undef___unused_for_sysctl.patch
      - 340-cctools-win_O_BINARY.patch
      - 350-cctools-win_fileio_mode.patch
      - 360-cctools-win_TMPDIR_to_TEMP.patch
      - 370-cctools-win_execute.patch
      - 380-cctools-win_avoid_mmap_ofile.patch
      - 400-cctools-_WIN64-fixes.patch
      - 410-cctools-remove_inc_arch_sparc_reg_h_PC.patch
      - 420-cctools-autoconfiscate.patch
  - url: https://opensource.apple.com/tarballs/ld64/ld64-{{ ld64_version }}.tar.gz
    sha256: {{ ld64_sha256 }}
    folder: cctools/ld64
    patches:
      - 100-ld64-add_sdkroot_headers.patch
      - 150-ld64-allow_glibc_or_bsd_qsort_r.patch
      - 180-ld64-add_CROSS_SYSROOT.patch
      - 200-ld64-add_typename.patch
      - 280-ld64-missing_includes.patch
      - 320-ld64-extern_C_log2_only_if___APPLE__.patch
      - 330-ld64-extern_C___assert_rtn.patch
      - 340-ld64-win_O_BINARY.patch
      - 350-ld64-win_fileio_mode.patch
      - 390-ld64-_WIN64-fixes.patch
      - 420-ld64-autoconfiscate.patch
      - 500-ld64-add-fake-CrashReporterClient.h.patch
      - 510-ld64-fix-incorrect-fname-case.patch
      - 520-ld64-fix-usr-local-and-usr-ordering.patch
      - 530-ld64-add-conda-specific-env-vars-to-modify-lib-search-paths.patch
      - 540-ld64-add-LD64_LOG_HASH_TABLE.patch
  # We copy headers necessary for building cctools/ld64 from dyld and MacOSX10.9.sdk (on all OSes).
  # older versions of these files are added by 100-add_sdkroot_headers.patch, we overwrite those...
  - url: https://opensource.apple.com/tarballs/dyld/dyld-{{ dyld_version }}.tar.gz
    sha256: {{ dyld_sha256 }}
    folder: bootstrap/dyld

requirements:
  build:
    # we use selectors rather than jinja2 here because we only want to use the native
    #   compiler to build llvm and clang (which are natively cross-compilers.)
    # We might want to split the runtime libs below into a separate recipe,
    #    so that this recipe can use jinja2 instead.
    - gcc_{{ native_compiler_subdir }}  # [linux]
    - gxx_{{ native_compiler_subdir }}  # [linux]
    - {{ compiler('cxx') }}  # [osx]
    - autoconf
    - automake
  host:
    - xar-bootstrap
    # We only use the static library from this and only get away with that as it depends on nothing.
    - zlib
    - llvm-lto-tapi

outputs:
  - name: cctools
    version: {{ cctools_version }}
    script: install-cctools.sh
    requirements:
      run:
        - llvm-lto-tapi
    build:
      number: 1
      ignore_run_exports:
        - zlib
    about:
      home: https://opensource.apple.com/source
      license: Apple Public Source License 2.0
      license_family: Other
      license_file: cctools/APPLE_LICENSE
      summary: Assembler, archiver, ranlib, libtool, otool et al for Darwin Mach-O files

  - name: ld64
    version: {{ ld64_version }}
    script: install-ld64.sh
    requirements:
      host:
        - llvm-lto-tapi
        - libcxx
      run:
        - llvm-lto-tapi
        - libcxx
    build:
      number: 1
      ignore_run_exports:
        - zlib
    about:
      home: https://opensource.apple.com/source
      license: Apple Public Source License 2.0
      license_family: Other
      license_file: cctools/ld64/APPLE_LICENSE
      summary: Darwin Mach-O linker
