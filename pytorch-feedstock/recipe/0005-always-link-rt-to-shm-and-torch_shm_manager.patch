From 3188d55e0b24710f83403740fbee9e760400da87 Mon Sep 17 00:00:00 2001
From: Jonathan Helmus <jjhelmus@gmail.com>
Date: Tue, 19 Feb 2019 13:25:49 -0600
Subject: [PATCH 5/5] always link rt to shm and torch_shm_manager

Always include rt as a target link library to the shm and torch_shm_manager
targets. Something is causing the cmake logic to fail and for the conda build
it is known the rt is needed.
---
 torch/lib/libshm/CMakeLists.txt | 64 ++++++++++++++++++++---------------------
 1 file changed, 32 insertions(+), 32 deletions(-)

diff --git a/torch/lib/libshm/CMakeLists.txt b/torch/lib/libshm/CMakeLists.txt
index 2fb93e8..0dac47e 100644
--- a/torch/lib/libshm/CMakeLists.txt
+++ b/torch/lib/libshm/CMakeLists.txt
@@ -41,39 +41,39 @@ SET_TARGET_PROPERTIES(shm PROPERTIES
 TARGET_LINK_LIBRARIES(shm caffe2 c10)
 
 if(UNIX AND NOT APPLE)
-  include(CheckLibraryExists)
+  #include(CheckLibraryExists)
   # https://github.com/libgit2/libgit2/issues/2128#issuecomment-35649830
-  check_library_exists(rt clock_gettime "time.h" NEED_LIBRT)
-  if(NEED_LIBRT)
-    target_link_libraries(shm rt)
-    target_link_libraries(torch_shm_manager rt)
-  else()
-    message(STATUS "Checking if rt requires pthread")
-    # Sometimes, rt won't be available unless you also link against
-    # pthreads.  In this case, the NEED_LIBRT test will fail, because
-    # check_library_exists isn't going to build the C file with the
-    # pthread file, and the build will fail, setting NEED_LIBRT to
-    # false (this is TOTALLY BOGUS, this situation should be an error
-    # situation, not a "oh, I guess rt is not supported", but it's
-    # not too easy to distinguish between the two situations).  So,
-    # if it fails, we try again, but this time also with a dependency
-    # on pthread.  If it succeeds this time, we know we not only need
-    # an rt dependency, but we also need pthread.
-    #
-    # BTW, this test looks for shm_open, because that's what we
-    # really care about (not clock_gettime).  I didn't change the
-    # site above though in case there was a reason we were testing
-    # against clock_gettime. In principle, the choice of symbol you
-    # test for shouldn't matter.
-    set(CMAKE_REQUIRED_LIBRARIES Threads::Threads)
-    check_library_exists(rt shm_open "sys/mman.h" NEED_RT_AND_PTHREAD)
-    unset(CMAKE_REQUIRED_LIBRARIES)
-    if(NEED_RT_AND_PTHREAD)
-      message(STATUS "Needs it, linking against pthread and rt")
-      target_link_libraries(shm rt Threads::Threads)
-      target_link_libraries(torch_shm_manager rt Threads::Threads)
-    endif()
-  endif()
+  #check_library_exists(rt clock_gettime "time.h" NEED_LIBRT)
+  #if(NEED_LIBRT)
+  target_link_libraries(shm rt)
+  target_link_libraries(torch_shm_manager rt)
+  #else()
+  #  message(STATUS "Checking if rt requires pthread")
+  #  # Sometimes, rt won't be available unless you also link against
+  #  # pthreads.  In this case, the NEED_LIBRT test will fail, because
+  #  # check_library_exists isn't going to build the C file with the
+  #  # pthread file, and the build will fail, setting NEED_LIBRT to
+  #  # false (this is TOTALLY BOGUS, this situation should be an error
+  #  # situation, not a "oh, I guess rt is not supported", but it's
+  #  # not too easy to distinguish between the two situations).  So,
+  #  # if it fails, we try again, but this time also with a dependency
+  #  # on pthread.  If it succeeds this time, we know we not only need
+  #  # an rt dependency, but we also need pthread.
+  #  #
+  #  # BTW, this test looks for shm_open, because that's what we
+  #  # really care about (not clock_gettime).  I didn't change the
+  #  # site above though in case there was a reason we were testing
+  #  # against clock_gettime. In principle, the choice of symbol you
+  #  # test for shouldn't matter.
+  #  set(CMAKE_REQUIRED_LIBRARIES Threads::Threads)
+  #  check_library_exists(rt shm_open "sys/mman.h" NEED_RT_AND_PTHREAD)
+  #  unset(CMAKE_REQUIRED_LIBRARIES)
+  #  if(NEED_RT_AND_PTHREAD)
+  #    message(STATUS "Needs it, linking against pthread and rt")
+  #    target_link_libraries(shm rt Threads::Threads)
+  #    target_link_libraries(torch_shm_manager rt Threads::Threads)
+  #  endif()
+  #endif()
 endif()
 
 
-- 
2.7.4

