## GLOBAL config
## Compilers, blas, R, python...

pin_run_as_build:
  libboost:
    max_pin: x.x.x

blas_impl:
  - mkl                        # [(x86 or x86_64) and not osx]
  - openblas                   # [not win]
c_compiler:
  - gcc                        # [linux]
  - clang                      # [osx]
  - vs2019                     # [win]
cxx_compiler:
  - gxx                        # [linux]
  - clangxx                    # [osx]
  - vs2019                     # [win]
cuda_compiler:
  - cuda-nvcc
fortran_compiler:
  - gfortran                   # [linux or osx]
  - intel-fortran              # [win]
m2w64_c_compiler:              # [win]
  - m2w64-toolchain            # [win]
m2w64_cxx_compiler:            # [win]
  - m2w64-toolchain            # [win]
m2w64_fortran_compiler:        # [win]
  - m2w64-toolchain            # [win]
ucrt64_c_compiler:             # [win]
  - ucrt64-gcc-toolchain       # [win]
ucrt64_cxx_compiler:           # [win]
  - ucrt64-gcc-toolchain       # [win]
ucrt64_fortran_compiler:       # [win]
  - ucrt64-gcc-toolchain       # [win]
rust_compiler:
  - rust
rust_compiler_version:
  - 1.82.0
# use {{ compiler('rust-gnu') }} when requiring a build using the m2w64-toolchain
rust_gnu_compiler:             # [win]
  - rust-gnu                   # [win]
rust_gnu_compiler_version:     # [win]
  - 1.82.0                     # [win]
CONDA_BUILD_SYSROOT:
  - /opt/MacOSX10.15.sdk        # [osx and x86_64]
  - /Library/Developer/CommandLineTools/SDKs/MacOSX11.1.sdk  # [osx and arm64]
VERBOSE_AT:
  - V=1
VERBOSE_CM:
  - VERBOSE=1
cran_mirror:
  - https://cran.r-project.org
c_compiler_version:        # [linux or osx]
  - 11.2.0                 # [linux]
  - 14                     # [osx]
cxx_compiler_version:      # [linux or osx]
  - 11.2.0                 # [linux]
  - 14                     # [osx]
cuda_compiler_version:
  - 12.4
fortran_compiler_version:
  - 2022.1.0                     # [win]
  - 11.2.0                       # [osx or linux]
clang_variant:
  - clang
# The basic go-compiler with CGO disabled (CGO_ENABLED=0).
# It generates fat binaries without libc dependencies.
go_compiler:
  - go-nocgo
go_compiler_version:
  - 1.21
# The go compiler build with CGO enabled (CGO_ENABLED=1).
# It can generate fat binaries that depend on conda's libc.
# You should use this compiler if the underlying
# program needs to link against other C libraries, in which
# case make sure to add 'c,cpp,fortran_compiler' for unix
# and the m2w64 equivalent for windows.
cgo_compiler:
  - go-cgo
cgo_compiler_version:
  - 1.21
macos_min_version:
  - 10.15 # [osx and x86_64]
  - 11.1  # [osx and arm64]
macos_machine:
  - x86_64-apple-darwin13.4.0  # [osx and x86_64]
  - arm64-apple-darwin20.0.0   # [osx and arm64]
MACOSX_DEPLOYMENT_TARGET:
  - 10.15 # [osx and x86_64]
  - 11.1  # [osx and arm64]
python:
  - 3.9
  - "3.10"
  - "3.11"
  - "3.12"
  - "3.13"
# numpy will by default use a compatible ABI for the oldest still-supported numpy versions
# `{{ pin_compatible("numpy") }}` is no longer needed as builds of numpy from version 2 have run_exports.
numpy:
  # python 3.9
  - 2.0
  # python 3.10
  - 2.0
  # python 3.11
  - 2.0
  # python 3.12
  - 2.0
  # python 3.13
  - 2.1
zip_keys:
  -
    - python
    - numpy
python_implementation:
  - cpython
python_impl:
  - cpython
r_base:
  - 4.3.1
r_version:
  - 4.3.1
r_implementation:
  - 'r-base'    # [linux and x86_64]
# This differs from target_platform in that it determines what subdir the compiler
#    will target, not what subdir the compiler package will be itself.
#    For example, we need a win-64 vs2008_win-32 package, so that we compile win-32
#    code on win-64 miniconda.
cross_compiler_target_platform:
  # - win-32                     # [win]
  - win-64                     # [win]
target_platform:
  - win-64                     # [win]
  # - win-32                     # [win]
channel_targets:
  - defaults
cdt_name:
  - amzn2    # [linux and aarch64]


## GLOBAL pinnings
boost:
  - 1.82
boost_cpp:
  - 1.82
bzip2:
  - 1.0
cairo:
  - 1.16
cyrus_sasl:
  - 2.1.28
dbus:
  - 1
expat:
  - 2
fontconfig:
  - 2.14
freetype:
  - 2.10
g2clib:
  - 1.6
geos:
  - 3.10.6
giflib:
  - 5
glib:
  - 2
gmp:
  - 6.3
gstreamer:
  - 1.24
gst_plugins_base:
  - 1.24
harfbuzz:
  - 10
hdf4:
  - 4.2
hdf5:
  - 1.14.5
hdfeos2:
  - 2.20
hdfeos5:
  - 5.1
icu:
  - 73
jpeg:
  - 9
libabseil:
  - 20250127.0
libcurl:
  - 8.1.1
libdap4:
  - 3.19
libffi:
  - 3.4
libgd:
  - 2.3.3
libgdal:
  - 3.6.2
libgrpc:
  - 1.71.0
libgsasl:
  - 1.10
libkml:
  - 1.3
libnetcdf:
  - 4.8
libpng:
  - 1.6
libprotobuf:
  - 5.29.3
libtiff:
  - 4.7
libwebp:
  - 1.3.2
libxml2:
  - 2.13
libxslt:
  - 1.1
lzo:
  - 2
mkl:
  - 2023
mpfr:
  - 4
openblas:
  - 0.3.21
openjpeg:
  - 2.3
openssl:
  - 3.0
perl:
  - 5.38
pixman:
  - 0.40
proj:
  - 9.3.1
proj4:
  - 5.2.0
readline:
  - 8.1
sqlite:
  - 3
tk:
  - 8.6
vc:
  - 14
xz:
  - 5
zlib:
  - 1.2
zstd:
  - 1.5.2
