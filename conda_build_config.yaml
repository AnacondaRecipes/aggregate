pin_run_as_build:
  libboost:
    max_pin: x.x.x

apr:
  - 1.6.3  # [not (osx and arm64)]
  - 1.7.0  # [osx and arm64]
blas_impl:
  - mkl                        # [x86 or x86_64]
  - openblas                   # [not win]
boost:
  - 1.73
boost_cpp:
  - 1.73
bzip2:
  - 1.0
cairo:
  - 1.16
c_compiler:
  - gcc                        # [linux]
  - clang                      # [osx]
  - vs2017                     # [win]
cxx_compiler:
  - gxx                        # [linux]
  - clangxx                    # [osx]
  - vs2017                     # [win]
fortran_compiler:
  - gfortran                   # [linux or osx]
  - intel-fortran              # [win]
m2w64_c_compiler:              # [win]
  - m2w64-toolchain            # [win]
m2w64_cxx_compiler:            # [win]
  - m2w64-toolchain            # [win]
m2w64_fortran_compiler:        # [win]
  - m2w64-toolchain            # [win]
rust_compiler:
  - rust
  - rust-gnu                   # [win]
rust_compiler_version:
  - 1.56.0
CONDA_BUILD_SYSROOT:
  - /opt/MacOSX10.10.sdk        # [osx and x86_64]
  - /Library/Developer/CommandLineTools/SDKs/MacOSX11.1.sdk  # [osx and arm64]
VERBOSE_AT:
  - V=1
VERBOSE_CM:
  - VERBOSE=1
# We use MRAN here because they take snapshots which improves reproducibility.
cran_mirror:
  - https://mran.microsoft.com/snapshot/2018-01-01
c_compiler_version:        # [linux or osx]
  - 11.2.0                 # [linux]
  - 12                     # [osx]
cxx_compiler_version:      # [linux or osx]
  - 11.2.0                 # [linux]
  - 12                     # [osx]
fortran_compiler_version:
  - 2019.0.0                     # [win]
  - 11.2.0                       # [osx or linux]
clang_variant:
  - clang
cyrus_sasl:
  - 2.1.26  # [not ((osx and arm64) or (linux and aarch64))]
  - 2.1.27  # [(osx and arm64) or (linux and aarch64)]
dbus:
  - 1
expat:
  - 2
fontconfig:
  - 2.13
freetype:
  - 2.10
g2clib:
  - 1.6
gstreamer:
  - 1.14  # [not win]
  - 1.18  # [win]
gst_plugins_base:
  - 1.14  # [not win]
  - 1.18  # [win]
geos:
  - 3.8.0  # [not (osx and arm64)]
  - 3.9.1  # [osx and arm64]
giflib:
  - 5
glib:
  - 2
gmp:
  - 6.1  # [not (osx and arm64)]
  - 6.2  # [osx and arm64]
# glibc used in ctng compiler builds
gnu:
  - 2.12.2
harfbuzz:
  - 4.3.0
hdf4:
  - 4.2
hdf5:
  - 1.10.6  # [not (osx and arm64)]
  - 1.12.1  # [osx and arm64]
hdfeos2:
  - 2.20
hdfeos5:
  - 5.1
icu:
  - 58  # [not (s390x or aarch64 or (osx and arm64))]
  - 68  # [s390x or aarch64 or (osx and arm64)]
jpeg:
  - 9
libdap4:
  - 3.19
libffi:
  - 3.3  # [not win]
  # Patches need to be rebased
  - 3.4  # [win]
libgd:
  - 2.3.3
libgdal:
  - 3.0
libgsasl:
  - 1.8
libkml:
  - 1.3
libnetcdf:
  - 4.8
libpng:
  - 1.6
libtiff:
  - 4.1  # [not ((osx and arm64) or (linux and aarch64))]
  - 4.2  # [(osx and arm64) or (linux and aarch64)]
libwebp:
  - 1.2.0
libxml2:
  - 2.9
libxslt:
  - 1.1
llvm_variant:
  - llvm
lzo:
  - 2
macos_min_version:
  - 10.9  # [osx and x86_64]
  - 11.1  # [osx and arm64]
macos_machine:
  - x86_64-apple-darwin13.4.0  # [osx and x86_64]
  - arm64-apple-darwin20.0.0   # [osx and arm64]
MACOSX_DEPLOYMENT_TARGET:
  - 10.9  # [osx and x86_64]
  - 11.1  # [osx and arm64]
mkl:
  - 2022.*
mpfr:
  - 4
# we build for an old version of numpy for forward compatibility
numpy:
  # python 3.7-3.9
  - 1.16    # [not (osx and arm64)]
  - 1.16    # [not (osx and arm64)]
  - 1.16    # [not (osx and arm64)]
  # python 3.8-3.9
  - 1.19    # [osx and arm64]
  - 1.19    # [osx and arm64]
  # python 3.10
  - 1.21
openblas:
  - 0.3.20
openjpeg:
  - 2.3
openssl:
  - 1.1.1
  # vs2008 precludes us from newer qt, and we haven't been able to build newer qt with openssl 1.1.1 yet
  - 1.0.2   # [win and py27]
perl:
  - 5.26    # [not (osx and arm64)]
  - 5.34    # [osx and arm64]
pixman:
  - 0.40
proj4:
  - 5.2.0
proj:
  - 6.2.1  # [not (osx and arm64)]
  - 7.2.0  # [osx and arm64]
libprotobuf:
  - 3.20.1
python:
  - 3.7      # [not arm64]
  - 3.8
  - 3.9
  - "3.10"
python_implementation:
  - cpython
python_impl:
  - cpython
r_version:
  - 3.5.0
r_implementation:
  - 'r-base'
  - 'mro-base'  # [not osx]
readline:
  - 8.0    # [not ((linux and aarch64) or (osx and arm64))]
  - 8.1    # [(linux and aarch64) or (osx and arm64)]
serf:
  - 1.3.9
sqlite:
  - 3
# This differs from target_platform in that it determines what subdir the compiler
#    will target, not what subdir the compiler package will be itself.
#    For example, we need a win-64 vs2008_win-32 package, so that we compile win-32
#    code on win-64 miniconda.
cross_compiler_target_platform:
  # - win-32                     # [win]
  - win-64                     # [win]
target_platform:
  - win-64                     # [win]
  # - win-32                     # [win]
tk:
  - 8.6                # [not ppc64le]
vc:
  - 14                         # [win]
zlib:
  - 1.2
xz:
  - 5
channel_targets:
  - defaults
cdt_name:
  - amzn2    # [linux and aarch64]
zip_keys:
  -
    - python
    - numpy
zstd:
  - 1.5.2
