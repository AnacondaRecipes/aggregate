#!/usr/bin/env bash

MACOS1014_SDK_KERNEL_HEADERS=/Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/System/Library/Frameworks/Kernel.framework/Versions/Current/Headers
# MACOS1014_SDK_KERNEL_HEADERS=/opt/MacOSX10.14.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers
mkdir sdk_extract
pushd sdk_extract
  [[ -f xnu-4570.71.2.tar.gz ]] || curl -SLO https://opensource.apple.com/tarballs/xnu/xnu-4570.71.2.tar.gz
  [[ -f architecture-272.200.3.tar.gz ]] || curl -SLO https://opensource.apple.com/tarballs/architecture/architecture-272.200.3.tar.gz
  [[ -f Libc-1272.200.26.tar.gz ]] || curl -SLO https://opensource.apple.com/tarballs/Libc/Libc-1272.200.26.tar.gz
  [[ -d xnu-4570.71.2 ]] || tar -xf xnu-4570.71.2.tar.gz
  [[ -d architecture-272.200.3 ]] || tar -xf architecture-272.200.3.tar.gz
  [[ -d Libc-1272.200.26 ]] || tar -xf Libc-1272.200.26.tar.gz
  XNU_HEADERS=${PWD}/xnu-4570.71.2/osfmk
  XNUKERN_HEADERS=${PWD}/xnu-4570.71.2/osfmk/
  LIBKERN_HEADERS=${PWD}/xnu-4570.71.2/libkern
  EXTERNAL_HEADERS=${PWD}/xnu-4570.71.2/EXTERNAL_HEADERS
  BSD_HEADERS=${PWD}/xnu-4570.71.2/bsd
  # MACOS1014_SDK_KERNEL_HEADERS=${XNU_HEADERS}
  ARCHITECTURE_HEADERS=${PWD}/architecture-272.200.3
  LIBC_HEADERS=${PWD}/Libc-1272.200.26
  mkdir -p ./include/mach/i386
  mkdir -p ./include/mach/machine
  mkdir -p ./include/i386
  # cp ${MACOS1014_SDK_KERNEL_HEADERS}/mach/i386/thread_status.h ./include/mach/i386/thread_status.h
  cp ${MACOS1014_SDK_KERNEL_HEADERS}/mach/machine/thread_status.h ./include/mach/machine/thread_status.h
  cp ${MACOS1014_SDK_KERNEL_HEADERS}/mach/i386/_structs.h ./include/mach/i386/_structs.h
  cp ${BSD_HEADERS}/i386/_mcontext.h  ./include/i386/_mcontext.h
  cp ${EXTERNAL_HEADERS}/Availability.h ./include/Availability.h
  cp ${EXTERNAL_HEADERS}/AvailabilityInternal.h ./include/AvailabilityInternal.h
  cp ${EXTERNAL_HEADERS}/AvailabilityMacros.h ./include/AvailabilityMacros.h

  declare -a SRC_COMMA_FILEPATHS
  SRC_COMMA_FILEPATHS+=(${EXTERNAL_HEADERS},Availability.h)
  SRC_COMMA_FILEPATHS+=(${EXTERNAL_HEADERS},AvailabilityInternal.h)
  SRC_COMMA_FILEPATHS+=(${EXTERNAL_HEADERS},AvailabilityMacros.h)
  SRC_COMMA_FILEPATHS+=(${ARCHITECTURE_HEADERS},alignment.h)
  SRC_COMMA_FILEPATHS+=(${ARCHITECTURE_HEADERS},byte_order.h)
  SRC_COMMA_FILEPATHS+=(${ARCHITECTURE_HEADERS},i386/alignment.h)
  SRC_COMMA_FILEPATHS+=(${ARCHITECTURE_HEADERS},i386/asm_help.h)
  SRC_COMMA_FILEPATHS+=(${ARCHITECTURE_HEADERS},i386/byte_order.h)
  SRC_COMMA_FILEPATHS+=(${ARCHITECTURE_HEADERS},i386/cpu.h)
  SRC_COMMA_FILEPATHS+=(${ARCHITECTURE_HEADERS},i386/desc.h)
# SRC_COMMA_FILEPATHS+=(${LIBC_HEADERS},i386/fenv.h)
  SRC_COMMA_FILEPATHS+=(${ARCHITECTURE_HEADERS},i386/fpu.h)
  SRC_COMMA_FILEPATHS+=(${ARCHITECTURE_HEADERS},i386/frame.h)
  SRC_COMMA_FILEPATHS+=(${ARCHITECTURE_HEADERS},i386/io.h)
# SRC_COMMA_FILEPATHS+=(${LIBC_HEADERS},i386/math.h)
  SRC_COMMA_FILEPATHS+=(${ARCHITECTURE_HEADERS},i386/pio.h)
  SRC_COMMA_FILEPATHS+=(${ARCHITECTURE_HEADERS},i386/reg_help.h)
  SRC_COMMA_FILEPATHS+=(${ARCHITECTURE_HEADERS},i386/sel.h)
  SRC_COMMA_FILEPATHS+=(${ARCHITECTURE_HEADERS},i386/table.h)
  SRC_COMMA_FILEPATHS+=(${ARCHITECTURE_HEADERS},i386/tss.h)
# SRC_COMMA_FILEPATHS+=(${LIBC_HEADERS},ppc/fenv.h)
  SRC_COMMA_FILEPATHS+=(${BSD_HEADERS},i386/_mcontext.h)
  SRC_COMMA_FILEPATHS+=(${MACOS1014_SDK_KERNEL_HEADERS},mach/i386/_structs.h)
  SRC_COMMA_FILEPATHS+=(${MACOS1014_SDK_KERNEL_HEADERS},mach/machine/thread_status.h)
# SRC_COMMA_FILEPATHS+=(${LIBC_HEADERS},ppc/math.h)
  SRC_COMMA_FILEPATHS+=(${BSD_HEADERS},i386/_limits.h)
  SRC_COMMA_FILEPATHS+=(${BSD_HEADERS},i386/_param.h)
  SRC_COMMA_FILEPATHS+=(${BSD_HEADERS},i386/_types.h)
  SRC_COMMA_FILEPATHS+=(${BSD_HEADERS},i386/endian.h)
  SRC_COMMA_FILEPATHS+=(${BSD_HEADERS},i386/fasttrap_isa.h)
  SRC_COMMA_FILEPATHS+=(${BSD_HEADERS},i386/limits.h)
  SRC_COMMA_FILEPATHS+=(${BSD_HEADERS},i386/param.h)
  SRC_COMMA_FILEPATHS+=(${BSD_HEADERS},i386/profile.h)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},i386/setjmp.h)
  SRC_COMMA_FILEPATHS+=(${BSD_HEADERS},i386/signal.h)
  SRC_COMMA_FILEPATHS+=(${BSD_HEADERS},i386/types.h)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},i386/user_ldt.h)
  SRC_COMMA_FILEPATHS+=(${BSD_HEADERS},i386/vmparam.h)
  SRC_COMMA_FILEPATHS+=(${LIBKERN_HEADERS},libkern/OSAtomic.h)
  SRC_COMMA_FILEPATHS+=(${LIBKERN_HEADERS},libkern/OSByteOrder.h)
# SRC_COMMA_FILEPATHS+=(${LIBKERN_HEADERS},libkern/OSCacheControl.h)
  SRC_COMMA_FILEPATHS+=(${LIBKERN_HEADERS},libkern/OSDebug.h)
  SRC_COMMA_FILEPATHS+=(${LIBKERN_HEADERS},libkern/OSKextLib.h)
  SRC_COMMA_FILEPATHS+=(${LIBKERN_HEADERS},libkern/OSReturn.h)
  SRC_COMMA_FILEPATHS+=(${LIBKERN_HEADERS},libkern/OSTypes.h)
  SRC_COMMA_FILEPATHS+=(${LIBKERN_HEADERS},libkern/_OSByteOrder.h)
  SRC_COMMA_FILEPATHS+=(${LIBKERN_HEADERS},libkern/i386/OSByteOrder.h)
  SRC_COMMA_FILEPATHS+=(${LIBKERN_HEADERS},libkern/i386/_OSByteOrder.h)
  SRC_COMMA_FILEPATHS+=(${LIBKERN_HEADERS},libkern/machine/OSByteOrder.h)
# SRC_COMMA_FILEPATHS+=(${LIBKERN_HEADERS},libunwind.h)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/audit_triggers.defs)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/boolean.h)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/bootstrap.h)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/clock.defs)
  SRC_COMMA_FILEPATHS+=(${MACOS1014_SDK_KERNEL_HEADERS},mach/clock.h)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/clock_priv.defs)
  SRC_COMMA_FILEPATHS+=(${MACOS1014_SDK_KERNEL_HEADERS},mach/clock_priv.h)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/clock_reply.defs)
  SRC_COMMA_FILEPATHS+=(${MACOS1014_SDK_KERNEL_HEADERS},mach/clock_reply.h)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/clock_types.defs)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/clock_types.h)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/error.h)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/exc.defs)
  SRC_COMMA_FILEPATHS+=(${MACOS1014_SDK_KERNEL_HEADERS},mach/exc.h)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/exception.h)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/exception_types.h)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/host_info.h)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/host_notify.h)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/host_notify_reply.defs)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/host_priv.defs)
  SRC_COMMA_FILEPATHS+=(${MACOS1014_SDK_KERNEL_HEADERS},mach/host_priv.h)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/host_reboot.h)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/host_security.defs)
  SRC_COMMA_FILEPATHS+=(${MACOS1014_SDK_KERNEL_HEADERS},mach/host_security.h)
  SRC_COMMA_FILEPATHS+=(${XNU_HEADERS},mach/host_special_ports.h)

  rm 100-cctools-add_sdkroot_headers.patch

  for SRC_COMMA_FILEPATH in "${SRC_COMMA_FILEPATHS[@]}" ; do
    SRC=$(echo ${SRC_COMMA_FILEPATH} | sed 's|\(.*\),.*|\1|g')
    FILEPATH=$(echo ${SRC_COMMA_FILEPATH} | sed 's|.*,\(.*\)|\1|g')
    echo SRC is $SRC
    echo FILEPATH is $FILEPATH 
    ls -l ${SRC}/${FILEPATH}
    mkdir -p include/$(dirname ${FILEPATH})
    cp ${SRC}/${FILEPATH} include/${FILEPATH}
    echo "diff -urN ./include.orig/${FILEPATH} ./include/${FILEPATH}" >> 100-cctools-add_sdkroot_headers.patch
    diff -urN ./include.orig/${FILEPATH} ./include/${FILEPATH} >> 100-cctools-add_sdkroot_headers.patch
  done
  echo macOS SDK headers written to ${PWD}/100-cctools-add_sdkroot_headers.patch
  cp ${PWD}/100-cctools-add_sdkroot_headers.patch ../100-cctools-add_sdkroot_headers.patch.2
popd
