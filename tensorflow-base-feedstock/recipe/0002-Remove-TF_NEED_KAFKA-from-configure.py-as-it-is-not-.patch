From 46f8d4e345c7c8384c1252f57123398de5ea18c7 Mon Sep 17 00:00:00 2001
From: Yong Tang <yong.tang.github@outlook.com>
Date: Sat, 24 Mar 2018 01:29:22 +0800
Subject: [PATCH 2/4] Remove TF_NEED_KAFKA from configure.py as it is not
 needed anymore. (#17565)

* Remove TF_NEED_KAFKA from configure.py as it is not needed anymore.

With the new update in kafka dataset support, it looks like
TF_NEED_KAFKA is not needed any more as we are loading .so
dynamically. For that I think it makes sense to remove TF_NEED_KAFKA
option from configure.py.

Signed-off-by: Yong Tang <yong.tang.github@outlook.com>

* Remove with_kafka_support from tensorflow/BUILD

Signed-off-by: Yong Tang <yong.tang.github@outlook.com>

* Disable kafka module if with_kafka_support is false

Signed-off-by: Yong Tang <yong.tang.github@outlook.com>

* Add flag of with_kafka_support_windows_override

Signed-off-by: Yong Tang <yong.tang.github@outlook.com>

* Remove duplication of kafka in bazel BUILD

Signed-off-by: Yong Tang <yong.tang.github@outlook.com>
---
 configure.py             |  2 +-
 tensorflow/BUILD         |  7 +++++++
 tensorflow/contrib/BUILD | 27 +++++++++++++++++++++------
 3 files changed, 29 insertions(+), 7 deletions(-)

diff --git a/configure.py b/configure.py
index d14edef1be..14c89ba46f 100644
--- a/configure.py
+++ b/configure.py
@@ -1411,7 +1411,7 @@ def main():
   set_build_var(environ_cp, 'TF_NEED_S3', 'Amazon S3 File System',
                 'with_s3_support', True, 's3')
   set_build_var(environ_cp, 'TF_NEED_KAFKA', 'Apache Kafka Platform',
-                'with_kafka_support', False, 'kafka')
+                'with_kafka_support', True, 'kafka')
   set_build_var(environ_cp, 'TF_ENABLE_XLA', 'XLA JIT', 'with_xla_support',
                 False, 'xla')
   set_build_var(environ_cp, 'TF_NEED_GDR', 'GDR', 'with_gdr_support',
diff --git a/tensorflow/BUILD b/tensorflow/BUILD
index d152281d5d..4b78597788 100644
--- a/tensorflow/BUILD
+++ b/tensorflow/BUILD
@@ -240,6 +240,13 @@ config_setting(
     visibility = ["//visibility:public"],
 )
 
+config_setting(
+    name = "with_kafka_support_windows_override",
+    define_values = {"with_kafka_support": "true"},
+    values = {"cpu": "x64_windows"},
+    visibility = ["//visibility:public"],
+)
+
 config_setting(
     name = "with_gcp_support_android_override",
     define_values = {"with_gcp_support": "true"},
diff --git a/tensorflow/contrib/BUILD b/tensorflow/contrib/BUILD
index 17ab200b28..3fafce9b2c 100644
--- a/tensorflow/contrib/BUILD
+++ b/tensorflow/contrib/BUILD
@@ -51,7 +51,6 @@ py_library(
         "//tensorflow/contrib/image:single_image_random_dot_stereograms_py",
         "//tensorflow/contrib/input_pipeline:input_pipeline_py",
         "//tensorflow/contrib/integrate:integrate_py",
-        "//tensorflow/contrib/kafka",
         "//tensorflow/contrib/keras",
         "//tensorflow/contrib/kernel_methods",
         "//tensorflow/contrib/kfac",
@@ -112,7 +111,13 @@ py_library(
     ]) + if_not_windows([
         "//tensorflow/contrib/ffmpeg:ffmpeg_ops_py",  # unix dependency, need to fix code
         "//tensorflow/contrib/lite/python:lite",  # unix dependency, need to fix code
-    ]),
+    ]) + select({
+        "//tensorflow:with_kafka_support_windows_override": [],
+        "//tensorflow:with_kafka_support": [
+            "//tensorflow/contrib/kafka",
+        ],
+        "//conditions:default": [],
+    }),
 )
 
 cc_library(
@@ -123,7 +128,6 @@ cc_library(
         "//tensorflow/contrib/coder:all_kernels",
         "//tensorflow/contrib/cudnn_rnn:cudnn_rnn_kernels",
         "//tensorflow/contrib/data/kernels:dataset_kernels",
-        "//tensorflow/contrib/kafka:dataset_kernels",
         "//tensorflow/contrib/factorization/kernels:all_kernels",
         "//tensorflow/contrib/input_pipeline:input_pipeline_ops_kernels",
         "//tensorflow/contrib/layers:sparse_feature_cross_op_kernel",
@@ -136,7 +140,13 @@ cc_library(
         "//tensorflow/contrib/text:all_kernels",
     ] + if_mpi(["//tensorflow/contrib/mpi_collectives:mpi_collectives_py"]) + if_cuda([
         "//tensorflow/contrib/nccl:nccl_kernels",
-    ]),
+    ]) + select({
+        "//tensorflow:with_kafka_support_windows_override": [],
+        "//tensorflow:with_kafka_support": [
+            "//tensorflow/contrib/kafka:dataset_kernels",
+        ],
+        "//conditions:default": [],
+    }),
 )
 
 cc_library(
@@ -150,7 +160,6 @@ cc_library(
         "//tensorflow/contrib/factorization:all_ops",
         "//tensorflow/contrib/framework:all_ops",
         "//tensorflow/contrib/input_pipeline:input_pipeline_ops_op_lib",
-        "//tensorflow/contrib/kafka:dataset_ops_op_lib",
         "//tensorflow/contrib/layers:sparse_feature_cross_op_op_lib",
         "//tensorflow/contrib/nccl:nccl_ops_op_lib",
         "//tensorflow/contrib/nearest_neighbor:nearest_neighbor_ops_op_lib",
@@ -161,7 +170,13 @@ cc_library(
         "//tensorflow/contrib/tensor_forest:tensor_forest_ops_op_lib",
         "//tensorflow/contrib/text:all_ops",
         "//tensorflow/contrib/tpu:all_ops",
-    ],
+    ] + select({
+        "//tensorflow:with_kafka_support_windows_override": [],
+        "//tensorflow:with_kafka_support": [
+            "//tensorflow/contrib/kafka:dataset_ops_op_lib",
+        ],
+        "//conditions:default": [],
+    }),
 )
 
 filegroup(
-- 
2.17.0

