{% set long_version="2019.0.3.20190220" %}
{% set mkldnn_version="0.18" %} # Only for generating url
{% set version='.'.join(long_version.split('.')[0:3]) %}
{% set maj_version=long_version.split('.')[0] %}

package:
  name: mklml-suite
  version: {{ version }}

source:
  url: https://github.com/intel/mkl-dnn/releases/download/v{{ mkldnn_version }}/mklml_lnx_{{ long_version }}.tgz  # [linux]
  sha256: f4129843d5c2996419f96f10928edd02b2150998861a088dc7cfa1b6a058102a                                        # [linux]
  url: https://github.com/intel/mkl-dnn/releases/download/v{{ mkldnn_version }}/mklml_mac_{{ long_version }}.tgz  # [osx]
  sha256: 53fdcd7e31c309bb6af869d82987d9c6414c1b957d63d10a9caa9ad077643d99                                        # [osx]
  url: https://github.com/intel/mkl-dnn/releases/download/v{{ mkldnn_version }}/mklml_win_{{ long_version }}.zip  # [win]
  sha256: eae0c49a7ed738f0ed97b897e952eaa881feddfa665017a8d5d9d79fd38964b4                                        # [win]
  folder: mklml

build:
  skip: True  # [not x86_64]
  skip: True  # [win and vc<14]

outputs:
  - name: libmklml
    script: install-libmklml.sh   # [unix]
    script: install-libmklml.bat  # [win]
    build:
      number: 0
      detect_binary_files_with_prefix: False
      missing_dso_whitelist:
        - /lib/libm.so.6
        - /lib/libc.so.6
        - /lib/libdl.so.2
        - /lib/libpthread.so.0
        - /lib64/ld-linux-x86-64.so.2
    requirements:
      host:
        # libmklml_gnu.so: Needed DSO lib/libgomp.so.1
        - libgcc-ng  # [linux]
        - intel-openmp {{ maj_version }}
      run:
        - libgcc-ng  # [linux]
        - intel-openmp {{ maj_version }}
  - name: mklml
    build:
      run_exports:
        - libmklml >={{ version }}
    requirements:
      run:
        - mkl-include {{ maj_version }}
        - libmklml {{ version }}

about:
  home: https://github.com/intel/mkl-dnn/releases
  license_file: {{ SRC_DIR }}/mklml/license.txt
  descrition: |
    MKLML is a subset of MKL and it's built by the MKL release team using
    standard MKL custom dynamic library builder. It contains smaller number of
    functions to reduce the size of the download and reduce the number of
    dynamic libraries user needs.
