From 4be427fda13d05b6f4ec4daf6aebcce34ce26d16 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Thu, 8 Dec 2016 23:25:26 +0000
Subject: [PATCH] macOS: Disable app bundle and do not put 'qtcreatorlibraries' in Frameworks

We still create an Info.plist (which for our purposes will need some
tweaking later). If ever hope to upstream, this needs to less of a hack.
---
 qtcreator.pri                                      |    4 ++--
 qtcreator.pro                                      |    5 ++++-
 src/app/app.pro                                    |    5 ++++-
 src/app/main.cpp                                   |    4 ++--
 src/plugins/qbsprojectmanager/qbsprojectparser.cpp |    2 +-
 src/plugins/qmldesigner/qmldesignerplugin.cpp      |    2 +-
 src/plugins/qtsupport/baseqtversion.cpp            |    6 +++---
 src/qtcreatorlibrary.pri                           |    6 +++++-
 8 files changed, 22 insertions(+), 12 deletions(-)

diff --git a/qtcreator.pri b/qtcreator.pri
index 318dd48..9ca8f6b 100644
--- a/qtcreator.pri
+++ b/qtcreator.pri
@@ -95,8 +95,8 @@ isEmpty(IDE_BUILD_TREE) {
 }
 
 IDE_APP_PATH = $$IDE_BUILD_TREE/bin
-osx {
-    IDE_APP_TARGET   = "Qt Creator"
+osx_no_thanks {
+    IDE_APP_TARGET   = qtcreator
 
     # check if IDE_BUILD_TREE is actually an existing Qt Creator.app,
     # for building against a binary package
diff --git a/qtcreator.pro b/qtcreator.pro
index 1738c44..1764382 100644
--- a/qtcreator.pro
+++ b/qtcreator.pro
@@ -107,7 +107,7 @@ linux {
     INSTALLS += appstream desktop
 }
 
-macx {
+macx_no_thanks {
     APPBUNDLE = "$$OUT_PWD/bin/Qt Creator.app"
     BINDIST_SOURCE = "$$OUT_PWD/bin/Qt Creator.app"
     deployqt.commands = $$PWD/scripts/deployqtHelper_mac.sh \"$${APPBUNDLE}\" \"$$[QT_INSTALL_BINS]\" \"$$[QT_INSTALL_TRANSLATIONS]\" \"$$[QT_INSTALL_PLUGINS]\" \"$$[QT_INSTALL_IMPORTS]\" \"$$[QT_INSTALL_QML]\"
@@ -128,6 +128,9 @@ macx {
             && rmdir /s /q binary-artifacts
         QMAKE_EXTRA_TARGETS += deployartifacts
     }
+    macx {
+        CONFIG -= app_bundle
+    }
 }
 
 INSTALLER_ARCHIVE_FROM_ENV = $$(INSTALLER_ARCHIVE)
diff --git a/src/app/app.pro b/src/app/app.pro
index 37a999f..8d2f9e7 100644
--- a/src/app/app.pro
+++ b/src/app/app.pro
@@ -26,7 +26,7 @@ win32 {
         RC_VERSION_STRING=\"$${QTCREATOR_DISPLAY_VERSION}\" \
         RC_COPYRIGHT=\"$$replace(COPYRIGHT, " ", "\\x20")\"
     RC_FILE = qtcreator.rc
-} else:macx {
+} else:macx_no_thanks {
     LIBS += -framework CoreFoundation
     minQtVersion(5, 7, 1) {
         QMAKE_ASSET_CATALOGS = $$PWD/qtcreator.xcassets
@@ -58,7 +58,9 @@ win32 {
             INSTALLS += icns
         }
     }
+}
 
+macx {
     infoplist = $$cat($$PWD/Info.plist, blob)
     infoplist = $$replace(infoplist, @MACOSX_DEPLOYMENT_TARGET@, $$QMAKE_MACOSX_DEPLOYMENT_TARGET)
     infoplist = $$replace(infoplist, @QTCREATOR_COPYRIGHT_YEAR@, $$QTCREATOR_COPYRIGHT_YEAR)
@@ -77,3 +79,4 @@ DISTFILES += qtcreator.rc \
 QMAKE_SUBSTITUTES += $$PWD/app_version.h.in
 
 CONFIG += no_batch
+CONFIG -= app_bundle
diff --git a/src/app/main.cpp b/src/app/main.cpp
index fa6e93e..0815b07 100644
--- a/src/app/main.cpp
+++ b/src/app/main.cpp
@@ -205,12 +205,12 @@ static inline QStringList getPluginPaths()
     //    "$XDG_DATA_HOME/data/QtProject/qtcreator" or "~/.local/share/data/QtProject/qtcreator" on Linux
     //    "~/Library/Application Support/QtProject/Qt Creator" on Mac
     QString pluginPath = QStandardPaths::writableLocation(QStandardPaths::GenericDataLocation);
-    if (Utils::HostOsInfo::isAnyUnixHost() && !Utils::HostOsInfo::isMacHost())
+    if (Utils::HostOsInfo::isAnyUnixHost()) // && !Utils::HostOsInfo::isMacHost())
         pluginPath += QLatin1String("/data");
     pluginPath += QLatin1Char('/')
             + QLatin1String(Core::Constants::IDE_SETTINGSVARIANT_STR)
             + QLatin1Char('/');
-    pluginPath += QLatin1String(Utils::HostOsInfo::isMacHost() ?
+    pluginPath += QLatin1String(false && Utils::HostOsInfo::isMacHost() ?
                                     Core::Constants::IDE_DISPLAY_NAME :
                                     Core::Constants::IDE_ID);
     pluginPath += QLatin1String("/plugins/");
diff --git a/src/plugins/qbsprojectmanager/qbsprojectparser.cpp b/src/plugins/qbsprojectmanager/qbsprojectparser.cpp
index b742eb0..77de83b 100644
--- a/src/plugins/qbsprojectmanager/qbsprojectparser.cpp
+++ b/src/plugins/qbsprojectmanager/qbsprojectparser.cpp
@@ -217,7 +217,7 @@ QString QbsProjectParser::pluginsBaseDirectory() const
 
     if (!qbsInstallDir.isEmpty())
         return qbsInstallDir + QLatin1Char('/') + qbsLibDirName;
-    if (HostOsInfo::isMacHost())
+    if (false && HostOsInfo::isMacHost())
         return QDir::cleanPath(QCoreApplication::applicationDirPath()
                                + QLatin1String("/../PlugIns"));
     else
diff --git a/src/plugins/qmldesigner/qmldesignerplugin.cpp b/src/plugins/qmldesigner/qmldesignerplugin.cpp
index d8ea45f..f4bccf8 100644
--- a/src/plugins/qmldesigner/qmldesignerplugin.cpp
+++ b/src/plugins/qmldesigner/qmldesignerplugin.cpp
@@ -184,7 +184,7 @@ bool QmlDesignerPlugin::initialize(const QStringList & /*arguments*/, QString *e
 bool QmlDesignerPlugin::delayedInitialize()
 {
     // adding default path to item library plugins
-    const QString pluginPath = Utils::HostOsInfo::isMacHost()
+    const QString pluginPath = (false && Utils::HostOsInfo::isMacHost())
             ? QString(QCoreApplication::applicationDirPath() + "/../PlugIns/QmlDesigner")
             : QString(QCoreApplication::applicationDirPath() + "/../"
                       + QLatin1String(IDE_LIBRARY_BASENAME) + "/qtcreator/plugins/qmldesigner");
diff --git a/src/plugins/qtsupport/baseqtversion.cpp b/src/plugins/qtsupport/baseqtversion.cpp
index beb07aa..79472b7 100644
--- a/src/plugins/qtsupport/baseqtversion.cpp
+++ b/src/plugins/qtsupport/baseqtversion.cpp
@@ -965,20 +965,20 @@ QString BaseQtVersion::findQtBinary(Binaries binary) const
         possibleCommands << HostOsInfo::withExecutableSuffix(QLatin1String("qmlscene"));
         break;
     case QmlViewer: {
-        if (HostOsInfo::isMacHost())
+        if (false && HostOsInfo::isMacHost())
             possibleCommands << QLatin1String("QMLViewer.app/Contents/MacOS/QMLViewer");
         else
             possibleCommands << HostOsInfo::withExecutableSuffix(QLatin1String("qmlviewer"));
     }
         break;
     case Designer:
-        if (HostOsInfo::isMacHost())
+        if (false && HostOsInfo::isMacHost())
             possibleCommands << QLatin1String("Designer.app/Contents/MacOS/Designer");
         else
             possibleCommands << HostOsInfo::withExecutableSuffix(QLatin1String("designer"));
         break;
     case Linguist:
-        if (HostOsInfo::isMacHost())
+        if (false && HostOsInfo::isMacHost())
             possibleCommands << QLatin1String("Linguist.app/Contents/MacOS/Linguist");
         else
             possibleCommands << HostOsInfo::withExecutableSuffix(QLatin1String("linguist"));
diff --git a/src/qtcreatorlibrary.pri b/src/qtcreatorlibrary.pri
index a4165a7..485eadb 100644
--- a/src/qtcreatorlibrary.pri
+++ b/src/qtcreatorlibrary.pri
@@ -12,10 +12,14 @@ win32 {
 
 DESTDIR = $$IDE_LIBRARY_PATH
 
-osx {
+osx_no_thanks {
     QMAKE_LFLAGS_SONAME = -Wl,-install_name,@rpath/Frameworks/
     QMAKE_LFLAGS += -compatibility_version $$QTCREATOR_COMPAT_VERSION
 }
+osx {
+    QMAKE_LFLAGS_SONAME = -Wl,-install_name,@rpath/qtcreator/
+    QMAKE_LFLAGS += -compatibility_version $$QTCREATOR_COMPAT_VERSION
+}
 include(rpath.pri)
 
 TARGET = $$qtLibraryTargetName($$TARGET)
-- 
1.7.1

